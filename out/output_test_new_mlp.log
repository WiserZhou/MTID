nohup: ignoring input
Namespace(checkpoint_root='/home/zhouyufan/Projects/PDPP/checkpoint', checkpoint_max_root='/home/zhouyufan/Projects/PDPP/save_max', log_root='/home/zhouyufan/Projects/PDPP/log_mlp/log_mlp', checkpoint_dir='whl', optimizer='adam', num_thread_reader=8, batch_size=256, batch_size_val=256, momemtum=0.9, save_freq=1, crop_only=1, centercrop=0, random_flip=1, verbose=1, fps=1, cudnn_benchmark=1, dataset='crosstask_base', action_dim=105, observation_dim=9600, class_dim=18, root='/home/zhouyufan/Projects/PDPP/dataset/crosstask', json_path_train='/home/zhouyufan/Projects/PDPP/dataset/crosstask/crosstask_release/base/train_list.json', json_path_val='/home/zhouyufan/Projects/PDPP/dataset/crosstask/crosstask_release/base/test_list.json', json_path_val2='', n_train_steps=200, start_epoch=0, resume=False, evaluate=True, pretrained=False, pin_memory=True, world_size=1, rank=0, dist_file='dist-file', dist_backend='nccl', multiprocessing_distributed=False, name='test_new_mlp', loss_type='Weighted_Gradient_MSE', ckpt_path='', dist_port=21712, horizon=3, epochs=140, log_freq=500, gpu=4, seed=217, weight=6, n_diffusion_steps=200, clip_denoised=True, ddim_discr_method='uniform', lr=0.0005, ema_decay=0.995, gradient_accumulate_every=1, step_start_ema=400, update_ema_every=10, imageEncoder=0, transformer_num=5, base_model='base')
crosstask_base
feature_base
is_valFalse
Loaded /home/zhouyufan/Projects/PDPP/dataset/crosstask/crosstask_release/base/train_list.json
crosstask_base
feature_base
is_valTrue
Loaded /home/zhouyufan/Projects/PDPP/dataset/crosstask/crosstask_release/base/test_list.json
logging outputs to  /home/zhouyufan/Projects/PDPP/log_mlp/log_mlp_test_new_mlp_20240804123909_crosstask_base
total_mlp:   0%|          | 0/140 [00:00<?, ?it/s]total_mlp:   1%|          | 1/140 [00:48<1:52:45, 48.68s/it]lrs:
4.285714285714286e-06
---------------------------------
/home/zhouyufan/Projects/PDPP/train_mlp.py:570: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(losses.avg), torch.tensor(acc)
total_mlp:   1%|▏         | 2/140 [01:38<1:53:19, 49.27s/it]total_mlp:   2%|▏         | 3/140 [02:21<1:45:35, 46.25s/it]lrs:
1.2857142857142857e-05
---------------------------------
total_mlp:   3%|▎         | 4/140 [03:11<1:48:11, 47.74s/it]total_mlp:   4%|▎         | 5/140 [03:53<1:42:53, 45.73s/it]lrs:
2.1428571428571428e-05
---------------------------------
total_mlp:   4%|▍         | 6/140 [04:43<1:45:37, 47.30s/it]total_mlp:   5%|▌         | 7/140 [05:24<1:40:16, 45.24s/it]lrs:
3e-05
---------------------------------
total_mlp:   6%|▌         | 8/140 [06:13<1:41:50, 46.29s/it]total_mlp:   6%|▋         | 9/140 [06:55<1:38:22, 45.06s/it]lrs:
3.857142857142857e-05
---------------------------------
